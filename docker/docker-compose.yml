version: "3.7"
services:
    postgres:
        build: 
            context: ./docker
            dockerfile: /Dockerfile
        volumes:
            - postgresdata:/var/lib/postgresql_/data/
            - ./data/csvs:/var/lib/postgresql_/csvs
            - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
        restart: on-failure
        ports:
            - "5435:5432"
    scrapers:
        tty: True
        depends_on:
            - postgres
        build: 
            context: ./docker
            dockerfile: /scraper.Dockerfile
        entrypoint: /opt/scr/scripts/scraper.sh
        volumes:
            - ./scripts/:/opt/scr/scripts
            - ./scraper/:/opt/scr/scraper
            - ./data/:/opt/scr/data
            - ./init/:/opt/scr/init

volumes:
    postgresdata:

#version: "3.7"
#services:
#    postgres:
#        image: postgres:12-alpine
#        environment:
#            - POSTGRES_USER=docker
#            - POSTGRES_PASSWORD=docker
#            - POSTGRES_DB=docker
#        logging:
#            options:
#               max-size: 10m
#                max-file: "3"
#        volumes:
#            - postgresdata:/var/lib/postgresql_/data/
#       ports:
#            - "5432:5432"
#    news_scraper:
#        image: python:3.9.1
#        depends_on:
#            - postgres
#        entrypoint: echo Finally, you're up.
#        tty: true
#        volumes:
#            - ./scraper/:/opt/scr        

#volumes:
#    postgresdata: